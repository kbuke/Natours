*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body{
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header{
  height: 95vh;
  background-size: cover;
  background-position: top;
  background-image: 
    linear-gradient(
      to right bottom, 
      hsla(111, 55%, 64%, 0.803), hsla(160, 64%, 43%, 0.796)
    ), 
    url("resources/imgs/hero.jpg");
    
    clip-path: polygon(
      0 0,
      100% 0,
      100% 80vh,
      0 100%
    );

    /* This is the origin of where its children start.
    See below w. logo-box as it is absolute, the top and left start 40px
    from the beginning of the header class */
    position: relative;
}

.logo-box {
  position: absolute; 
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
  /* width will b e auto set my browser when height is set */
}

.text-box{
  position: absolute;

  /*  This positions the left and top of the box at the 50% mark */
  /* top: 50%; */
  left: 50%;
  top: 40%; /* just to make it look more centered with the missing wedge */

  /*  This positions the center of the box (by the top and LHS)
      at the center of the page
  */
  transform: translate(-50%, -50%);
}

.heading-primary{
  color: #fff;
  text-transform: uppercase;

  /* Stops headings from shaking */
  backface-visibility: hidden;
}

.heading-primary-main{
  /* put text on-top of eachother */
  display: block;

  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  /* link to key frame moveInLeft below */
  animation-name: moveInLeft;
  animation-duration: 2s;

  /* 
    animation-delay: 3s; => delays animation by set time 
    animation-timing-function: ease-in; => how quick it takes to run these requirements
    animation-iteration-count: 3; => how many times the animation should occur
  */
}

.heading-primary-sub{
  /* put text on-top of eachother */
  display: block;

  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;

  /* 
    due to heading-primary-main, just put animation
    and then computer will figure out the rest
  */
  animation: moveInRight 2s;
}

@keyframes moveInLeft {
  /*always best to optimise opacity and transform only*/
  0% {
    opacity: 0;
    transform: translateX(-100px); /*animated in x direction*/
  }

  /* 
    can put values between for any value 
    in this case it creates a snap-back effect
  */
  80% {
    opacity: 0.8;
    transform: translateX(20px);
  }

  100% {
    opacity: 1;
    transform: translate(0); /*ends exactly how it should*/
  }
}

@keyframes moveInRight {
  0%{
    opacity: 0;
    transform: 
      translateX(100px)
      /* allows you to rotate things */
      /* rotate(0deg) */
    ;
  }

  /* 
    can put values between for any value 
    in this case it creates a snap-back effect
  */
  80%{
    opacity: 0.8;
    transform: 
      translateX(-20px)
      /* rotate(120deg) */
    ;
  }

  100%{
    opacity: 1;
    transform: translate(0);
  }
}